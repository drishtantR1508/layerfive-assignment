[{"/home/drishtant/Layerfive/react-frontend/src/index.js":"1","/home/drishtant/Layerfive/react-frontend/src/Routes.js":"2","/home/drishtant/Layerfive/react-frontend/src/core/Home.js":"3","/home/drishtant/Layerfive/react-frontend/src/core/Base.js":"4","/home/drishtant/Layerfive/react-frontend/src/core/helper/coreapicalls.js":"5","/home/drishtant/Layerfive/react-frontend/src/Backend.js":"6","/home/drishtant/Layerfive/react-frontend/src/core/addUser.js":"7","/home/drishtant/Layerfive/react-frontend/src/core/User.js":"8"},{"size":179,"mtime":1610711883855,"results":"9","hashOfConfig":"10"},{"size":403,"mtime":1610723644142,"results":"11","hashOfConfig":"10"},{"size":472,"mtime":1610724668073,"results":"12","hashOfConfig":"10"},{"size":776,"mtime":1610714110744,"results":"13","hashOfConfig":"10"},{"size":267,"mtime":1610714465602,"results":"14","hashOfConfig":"10"},{"size":50,"mtime":1610711948081,"results":"15","hashOfConfig":"10"},{"size":4221,"mtime":1610777186763,"results":"16","hashOfConfig":"10"},{"size":1898,"mtime":1610724728406,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"163roma",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"/home/drishtant/Layerfive/react-frontend/src/index.js",[],["36","37"],"/home/drishtant/Layerfive/react-frontend/src/Routes.js",[],"/home/drishtant/Layerfive/react-frontend/src/core/Home.js",[],"/home/drishtant/Layerfive/react-frontend/src/core/Base.js",[],"/home/drishtant/Layerfive/react-frontend/src/core/helper/coreapicalls.js",[],"/home/drishtant/Layerfive/react-frontend/src/Backend.js",[],"/home/drishtant/Layerfive/react-frontend/src/core/addUser.js",[],"/home/drishtant/Layerfive/react-frontend/src/core/User.js",["38"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"./Base\";\nimport { Link } from \"react-router-dom\";\nimport { getUsers } from \"./helper/coreapicalls\";\nexport default function User() {\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(false);\n\n  const loadAllUsers = () => {\n    getUsers().then((data) => {\n      if (data.error) {\n        setError(data.error);\n        console.log(data.error);\n      } else {\n        setUsers(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadAllUsers();\n  }, []);\n\n  return (\n    <Base>\n      <div className=\"text-center\">\n        <button className=\"btn btn-danger btn-lg\">\n          <Link to=\"/\">Add a User</Link>\n        </button>\n        <br />\n        <br />\n      </div>\n      <table className=\"table table-striped table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">First Name</th>\n            <th scope=\"col\">Last Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Gender</th>\n            <th scope=\"col\">Address Line 1</th>\n            <th scope=\"col\">Address Line 2</th>\n            <th scope=\"col\">City</th>\n            <th scope=\"col\">Zip Code</th>\n            <th scope=\"col\">State</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user, index) => {\n            return (\n              <tr>\n                <td>{user.first_name}</td>\n                <td>{user.last_name}</td>\n                <td>{user.email}</td>\n                <td>{user.phone}</td>\n                <td>{user.gender}</td>\n                <td>{user.address1}</td>\n                <td>{user.address2}</td>\n                <td>{user.city}</td>\n                <td>{user.zipcode}</td>\n                <td>{user.state}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </Base>\n  );\n}\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":7,"column":10,"nodeType":"45","messageId":"46","endLine":7,"endColumn":15},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]